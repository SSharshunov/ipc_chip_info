name: ipc-chip-build

on:
  push:
    branches:
      - master
      - patch-1
    tags:
      - 'v*'

jobs:
  build-musl-static:
    runs-on: ubuntu-latest

    env:
      TOOLCHAIN: arm-unknown-linux-musleabi

    steps:
      - uses: pozetroninc/github-action-get-latest-release@master
        id: ct-ng-release
        with:
          owner: widgetii
          repo: ct-ng-builds

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check if Git tag exists
        run: |
          echo "::set-env name=HEAD_TAG::$(git tag --points-at HEAD)"
          echo "::set-env name=GIT_HASH::$(git rev-parse --short $GITHUB_SHA)"

      - name: Build sources
        run: |
          REL="${{ steps.ct-ng-release.outputs.release }}"
          echo "Got release $REL"
          wget -qO- https://github.com/widgetii/ct-ng-builds/releases/download/$REL/$TOOLCHAIN.tar.xz | \
            tar xfJ - -C /opt
          export PATH=/opt/$TOOLCHAIN/bin:$PATH
          sudo apt install -y cmake upx-ucl
          cmake -H. -Bbuild -DCMAKE_C_COMPILER=${TOOLCHAIN}-gcc -DCMAKE_BUILD_TYPE=Release
          cmake --build build
          upx build/ipc_chip_info
          cp build/ipc_chip_info ipc_chip_info-$GIT_HASH

      - name: Prerelease (for dev versions)
        if: env.HEAD_TAG == ''
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          title: "Development Build"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          files: "build/ipc_chip_info"

      - name: Publish file on S3 for HTTP access (for dev versions)
        if: env.HEAD_TAG == ''
        uses: tpaschalis/s3-sync-action@master
        with:
          args: --acl public-read
        env:
          FILE: ./ipc_chip_info-${{ env.GIT_HASH }}
          AWS_REGION: 'eu-north-1'
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Trigger CI tests
        if: env.HEAD_TAG == ''
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: OpenIPC/ipc_chip_info
          event-type: ci-tests
          client-payload: '{"sha": "${{ env.GIT_HASH }}"}'

      - name: Create release (for tagged versions)
        if: env.HEAD_TAG != ''
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (for tagged versions)
        if: env.HEAD_TAG != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "build/ipc_chip_info"
          asset_name: ipc_chip_info
          asset_content_type: application/octet-stream
